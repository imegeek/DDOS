# Logs

# *.log
#npm-debug.log*
#yarn-debug.log*
#yarn-error.log*

# Runtime data
#pids
# *.pid
# *.seed
# *.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
#lib-cov

# Coverage directory used by tools like istanbul
#coverage

# nyc test coverage
#.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
#.grunt

# Bower dependency directory (https://bower.io/)
#bower_components

# node-waf configuration
#.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
#build/Release

# Dependency directories
#node_modules/
#jspm_packages/

# Typescript v1 declaration files
#typings/

# Optional npm cache directory
#.npm

# Optional eslint cache
#.eslintcache

# Optional REPL history
#.node_repl_history

# Output of 'npm pack'
# *.tgz

# Yarn Integrity file
#.yarn-integrity

# dotenv environment variables file
#.env

#.DS_STORE

import os

cmd0 = "echo -ne ' [!] Please Wait While Staring\r'"
cmd1 = "echo -ne ' [3] Please Wait While Staring\r'"
cmd2 = "echo -ne ' [2] Please Wait While Staring.\r'"
cmd3 = "echo -ne ' [1] Please Wait While Staring..\r'"
cmd4 = "echo -ne ' [0] Please Wait While Staring...\r'"
cmd5 = "echo -ne ' [âˆš] Please Wait While Staring\r'"

print
os.system(cmd0)
os.system("sleep 1")
os.system(cmd1)
os.system("sleep 1")
os.system(cmd2)
os.system("sleep 1")
os.system(cmd3)
os.system("sleep 1")
os.system(cmd4)
os.system("sleep 1")
os.system(cmd5)
os.system("sleep 1")
print
